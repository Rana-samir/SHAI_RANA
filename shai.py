# -*- coding: utf-8 -*-
"""SHAI.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b7KOHa_ltxbAqnBBrTg8KShWP9ul8usR
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

data=pd.read_csv('/content/Salaries.csv')
data.head()

"""# **Data Exploration**"""

data.columns

data.shape

data.info()

"""check for missing values"""

missing_values = data.isnull()

# Sum the missing values for each column
missing_count = missing_values.sum()

# Display the missing count for each column
print("Missing Values Count:")
print(missing_count)

"""# **Describe the data**"""

data.describe()

data.TotalPay.median()

"""box plot for salary column to visulaize the median and find the ranges of salary"""

plt.figure(figsize=(6,4),dpi=250)
plt.boxplot(data.TotalPay,labels=['Salaries'])
bins=[40000,80000,120000,160000,200000,240000,280000,320000,360000,400000,440000,480000,520000]
plt.yticks(bins)
plt.show()

"""# **Data cleaning**

Department column
"""

data[['JobTitle','Department']]=data.JobTitle.str.split('(', 1, expand=True)
data.head(5)

# rearranging columns
col = list(data.columns)
data = data[ col[0:3] + [col[13]] + col[3:13]]
data.head()

# there are many employees without mentioned department so replace it with other
data['Department']=data['Department'].fillna('OTHER')
data.head(10)

#employee with ID = 148624 has other department not (civil/Criminal) as I guess so I edit it

data.loc[148620, 'JobTitle'] ='Attorney (Civil/Criminal)'
data.loc[148620, 'Department'] ='Other'
data.tail()

# strip department
data['Department']=data['Department'].str.rstrip(')')
data

# remove duplicates
data.drop_duplicates() # there is no duplicates

# it is clear that Notes and Status columns aren't useful
data=data.drop(columns={'Notes','Status'})

# solving NULL values:

# in Employees name, there are four rows which don't have names, in addition to having null values in base pay
for x in data.index:
    if data.loc[x, 'EmployeeName'] == 'Not provided':
        data.drop(x, inplace=True)

print(data.tail(10))

# Employees who don't have benefits so it must be replaced with zeros
# employees who have null values at base pay : it means that they aren't working permenantly in the company, they may are freelancers or working as part time
# they have payment in otherpay so I will replace NAN with zeros
data[['Benefits', 'BasePay', 'OtherPay', 'OvertimePay']] = data[[
    'Benefits', 'BasePay', 'OtherPay', 'OvertimePay']].fillna(0.0)

data.head(10)

# employees who have zeros in TotalpayBenefits, I guess that they aren't working
for x in data.index:
    if data.loc[x, 'TotalPayBenefits'] == 0.00:
        data.drop(x, inplace=True)
data.tail(10)

data = data.reset_index(drop=True)
data

"""# **Histogram**"""

# histogram represents the salary as it deduced that the highest frequency salary from 40000 to 80000
plt.figure(figsize=(5,3),dpi=200)
bins=[40000,80000,120000,160000,200000,240000,280000]
plt.hist(data.TotalPay,bins=bins)
plt.xticks(bins)
plt.title('Distribution of salaries',fontdict={'fontsize':20,'fontweight':'bold'})
plt.xlabel('Salary',fontdict={'fontsize':18})
plt.show()

"""# **Pie chart**

It seems that both the police and fire departments constitute small percentages, while the majority falls under the category of "other." To address this issue, revisions are necessary to properly allocate departments and reduce the disproportionately high percentage labeled as "other."
"""

plt.figure(figsize=(6,4),dpi=200)
police=data.loc[data.Department=='POLICE DEPARTMENT'].count()[0]
fire=data.loc[data.Department=='FIRE DEPARTMENT'].count()[0]
other=data.loc[data.Department=='OTHER'].count()[0]
weights=[police,other,fire]
labels=['police','Other','fire']
colors=['blue','red','purple']
explode=[0.1,0.1,0.9]
plt.title('Distribution of Departments',fontdict={'fontsize':20,'fontweight':'bold'})
plt.pie(weights,labels=labels,explode=explode,autopct='%0.2f %%',pctdistance=0.8)
plt.legend(loc='upper right')

plt.show()

"""# **Groupby**"""

#group the data by one or more columns and calculate summary statistics . compare the average salaries
data.groupby(['JobTitle']).agg({'TotalPay': ['mean', 'min', 'max']})

data.groupby(['Year']).agg({'TotalPay': [
      'mean', 'min', 'max', 'count'], 'TotalPayBenefits': ['mean', 'min', 'max', 'count']})

data.groupby(['JobTitle']).agg({'BasePay': ['mean', 'min', 'max'], 'OvertimePay': [
      'mean', 'min', 'max'], 'OtherPay': ['mean', 'min', 'max']})

"""It seems that there is a negative correlation between BasePay and OtherPay, as only a small subset of employees receiving base pay also receive other pay. Additionally, when an employee receives both types of pay, there tends to be an inverse relationship; one of them is high while the other is comparatively lower."""

plt.figure(figsize=(6,4),dpi=150)
plt.plot(data['BasePay'],data['OtherPay'],label="salaries",color='red',linewidth=1,marker='.',markersize=10,linestyle='--')
plt.title('First Graph!',fontdict={'fontsize':20,'fontweight':'bold'})
plt.ylabel('Salaries',fontdict={'fontsize':16})
plt.xlabel('Year',fontdict={'fontsize' : 16})
plt.legend()
plt.show()

data.to_csv("final_salaries")

"""# **summary of insights**

Upon conducting an analysis involving data exploration, cleaning, visualization, and grouping, numerous insights have been gleaned. No duplicate rows were identified; however, it was observed that both the notes and status columns contained no values, leading to their removal. Subsequent examination for missing values revealed a significant number in the base pay and benefits columns, along with four instances of missing values in overtime pay and other pay. Upon further filtering, it was uncovered that four employees lacked names and displayed zeros across all columns, suggesting they may no longer be employed. Consequently, these entries were removed. The decision to fill missing values in base pay and benefits with zeros was driven by the presence of salaries in the other pay column, implying potential part-time employment or a similar arrangement.
Following the visualization process, it was observed that salaries spanned a range of 35,000 to 200,000, with several outliers extending up to 520,000. Utilizing a histogram, I determined that the salary frequency peaked within the 40,000 to 80,000 range. Using a pie chart, It seems that both the police and fire departments constitute small percentages, while the majority falls under the category of "other." To address this issue, revisions are necessary to properly allocate departments and reduce the disproportionately high percentage labelled as "other."
A scatter plot was created to explore the correlation between base pay and other pay. Notably, a negative correlation emerged, indicating that a limited subset of employees receiving base pay also received other pay. Moreover, when employees received both types of pay, an inverse relationship was evident, with one being high while the other was comparatively lower.
To delve further, I grouped the salary and year columns to ascertain the average highest salary per year. The analysis revealed that the peak average salary occurred in 2013.
"""